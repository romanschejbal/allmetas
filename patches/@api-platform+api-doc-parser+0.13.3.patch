diff --git a/node_modules/@api-platform/api-doc-parser/lib/esm/hydra/parseHydraDocumentation.js b/node_modules/@api-platform/api-doc-parser/lib/esm/hydra/parseHydraDocumentation.js
index 00500a9..674d5f1 100644
--- a/node_modules/@api-platform/api-doc-parser/lib/esm/hydra/parseHydraDocumentation.js
+++ b/node_modules/@api-platform/api-doc-parser/lib/esm/hydra/parseHydraDocumentation.js
@@ -17,6 +17,7 @@ function guessNameFromUrl(url, entrypointUrl) {
  * Finds the description of the class with the given id.
  */
 function findSupportedClass(docs, classToFind) {
+    classToFind = classToFind.replace("http:", "https:");
     const supportedClasses = get(docs, '[0]["http://www.w3.org/ns/hydra/core#supportedClass"]');
     if (!Array.isArray(supportedClasses)) {
         throw new Error('The API documentation has no "http://www.w3.org/ns/hydra/core#supportedClass" key or its value is not an array.');
@@ -37,7 +38,7 @@ export function getDocumentationUrlFromHeaders(headers) {
     if (matches === null) {
         throw new Error('The "Link" HTTP header is not of the type "http://www.w3.org/ns/hydra/core#apiDocumentation".');
     }
-    return matches[1];
+    return matches[1].replace("http:", "https:");
 }
 /**
  * Retrieves Hydra's entrypoint and API docs.
@@ -201,7 +202,7 @@ export default function parseHydraDocumentation(entrypointUrl, options = {}) {
                 resourceOperations.push(operation);
                 operations.push(operation);
             }
-            const url = get(entrypoint, `[0]["${property["@id"]}"][0]["@id"]`);
+            const url = get(entrypoint, `[0]["${property["@id"].replace("https:", "http:")}"][0]["@id"]`);
             if (!url) {
                 throw new Error(`Unable to find the URL for "${property["@id"]}" in the entrypoint, make sure your API resource has at least one GET collection operation declared.`);
             }
